[pytest]
# Pytest configuration for download-lambda

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts =
    # Verbose output
    -v
    # Show summary of all test outcomes
    -ra
    # Show local variables in tracebacks
    --showlocals
    # Coverage reporting
    --cov=src
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    # Coverage thresholds
    --cov-fail-under=80
    # Strict markers
    --strict-markers
    # Warnings
    -W error::DeprecationWarning
    -W error::PendingDeprecationWarning

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated, no external dependencies)
    integration: Integration tests (with mocked AWS services)
    acceptance: Acceptance tests (end-to-end user scenarios)
    slow: Tests that take significant time to run
    security: Security-focused tests

# Coverage options
[coverage:run]
source = src
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Standard pragma
    pragma: no cover
    # Don't complain about missing debug-only code
    def __repr__
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    # Type checking
    if TYPE_CHECKING:
    @abstractmethod

precision = 2
show_missing = True

[coverage:html]
directory = htmlcov
